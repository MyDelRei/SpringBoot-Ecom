package mycli.functions;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;

public class MakeModel {

    public static void run(String className) {
        String tableName = toSnakeCase(className);

        // Paths
        String modelPath = "src/main/java/org/project/ecom/model/" + className + ".java";
        String repoPath = "src/main/java/org/project/ecom/repository/" + className + "Repository.java";
        String migrationPath = "src/main/resources/db/migration/V1__create_" + tableName + "_table.sql";

        // Generate
        generateFile(modelPath, generateModelTemplate(className));
        generateFile(repoPath, generateRepositoryTemplate(className));
        generateFile(migrationPath, generateMigrationTemplate(tableName));

        System.out.println("✅ Model, Repository, and Migration created for " + className);
    }

    private static void generateFile(String outputPath, String content) {
        try {
            Files.createDirectories(Paths.get(outputPath).getParent());
            Files.writeString(Paths.get(outputPath), content);
        } catch (IOException e) {
            System.err.println("❌ Failed to create file: " + outputPath);
            e.printStackTrace();
        }
    }

    private static String generateModelTemplate(String className) {
        return "package org.project.model;\n\n" +
                "import lombok.*;\n" +
                "import jakarta.persistence.*;\n" +
                "import java.time.LocalDateTime;\n\n" +
                "@Data\n" +
                "@Builder\n" +
                "@NoArgsConstructor\n" +
                "@AllArgsConstructor\n" +
                "@Entity\n" +
                "public class " + className + " {\n" +
                "    @Id\n" +
                "    private Long id;\n" +
                "    private LocalDateTime createdAt;\n" +
                "    private LocalDateTime updatedAt;\n" +
                "}\n";
    }



    private static String generateRepositoryTemplate(String className) {
        return "package org.project.repository;\n\n" +
                "import org.project.model." + className + ";\n" +
                "import org.springframework.data.repository.CrudRepository;\n\n" +
                "public interface " + className + "Repository extends CrudRepository<" + className + ", Long> {\n" +
                "}\n";
    }

    private static String generateMigrationTemplate(String tableName) {
        return "CREATE TABLE " + tableName + " (\n" +
                "    id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,\n" +
                "    created_at TIMESTAMP,\n" +
                "    updated_at TIMESTAMP\n" +
                ");\n";
    }

    private static String toSnakeCase(String name) {
        return name.replaceAll("([a-z])([A-Z])", "$1_$2").toLowerCase();
    }
}
