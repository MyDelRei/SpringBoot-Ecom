-- Migration: CreateSkuTable
CREATE TABLE sku(
                    sku_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                    sku_code VARCHAR2(100) UNIQUE NOT NULL,
                    Description CLOB,
                    Product_Id NUMBER NOT NULL,
                    Base_Price NUMBER(12, 2),
                    sale_price NUMBER(12, 2),
                    is_serialized CHAR(1) DEFAULT 'N',
                    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                    CONSTRAINT fk_product_id FOREIGN KEY (Product_Id) REFERENCES product(product_id)
);

-- Merge (upsert) SKU data to avoid duplicates

MERGE INTO sku s
    USING (SELECT 'IPH15PRO-256GB' AS sku_code, 'iPhone 15 Pro with 256GB storage, Silver' AS description, 1 AS product_id, 999.99 AS base_price, 1099.99 AS sale_price, 'Y' AS is_serialized FROM dual) src
    ON (s.sku_code = src.sku_code)
    WHEN NOT MATCHED THEN
        INSERT (sku_code, description, product_id, base_price, sale_price, is_serialized)
            VALUES (src.sku_code, src.description, src.product_id, src.base_price, src.sale_price, src.is_serialized);

MERGE INTO sku s
    USING (SELECT 'IPH15PRO-512GB' AS sku_code, 'iPhone 15 Pro with 512GB storage, Black' AS description, 1 AS product_id, 1199.99 AS base_price, 1299.99 AS sale_price, 'Y' AS is_serialized FROM dual) src
    ON (s.sku_code = src.sku_code)
    WHEN NOT MATCHED THEN
        INSERT (sku_code, description, product_id, base_price, sale_price, is_serialized)
            VALUES (src.sku_code, src.description, src.product_id, src.base_price, src.sale_price, src.is_serialized);

MERGE INTO sku s
    USING (SELECT 'MBP16-2025' AS sku_code, 'MacBook Pro 16-inch, M2 Chip, 16GB RAM' AS description, 2 AS product_id, 2399.00 AS base_price, 2499.00 AS sale_price, 'Y' AS is_serialized FROM dual) src
    ON (s.sku_code = src.sku_code)
    WHEN NOT MATCHED THEN
        INSERT (sku_code, description, product_id, base_price, sale_price, is_serialized)
            VALUES (src.sku_code, src.description, src.product_id, src.base_price, src.sale_price, src.is_serialized);

MERGE INTO sku s
    USING (SELECT 'GALXS23U-256GB' AS sku_code, 'Samsung Galaxy S23 Ultra with 256GB storage' AS description, 3 AS product_id, 1099.00 AS base_price, 1199.00 AS sale_price, 'Y' AS is_serialized FROM dual) src
    ON (s.sku_code = src.sku_code)
    WHEN NOT MATCHED THEN
        INSERT (sku_code, description, product_id, base_price, sale_price, is_serialized)
            VALUES (src.sku_code, src.description, src.product_id, src.base_price, src.sale_price, src.is_serialized);

MERGE INTO sku s
    USING (SELECT 'GALXS23U-512GB' AS sku_code, 'Samsung Galaxy S23 Ultra with 512GB storage' AS description, 3 AS product_id, 1299.00 AS base_price, 1399.00 AS sale_price, 'Y' AS is_serialized FROM dual) src
    ON (s.sku_code = src.sku_code)
    WHEN NOT MATCHED THEN
        INSERT (sku_code, description, product_id, base_price, sale_price, is_serialized)
            VALUES (src.sku_code, src.description, src.product_id, src.base_price, src.sale_price, src.is_serialized);

MERGE INTO sku s
    USING (SELECT 'SAMQLED55' AS sku_code, 'Samsung 55-inch QLED Smart TV' AS description, 4 AS product_id, 899.00 AS base_price, 999.00 AS sale_price, 'N' AS is_serialized FROM dual) src
    ON (s.sku_code = src.sku_code)
    WHEN NOT MATCHED THEN
        INSERT (sku_code, description, product_id, base_price, sale_price, is_serialized)
            VALUES (src.sku_code, src.description, src.product_id, src.base_price, src.sale_price, src.is_serialized);

MERGE INTO sku s
    USING (SELECT 'SONYA7III-BODY' AS sku_code, 'Sony Alpha A7 III Mirrorless Camera Body' AS description, 5 AS product_id, 1999.00 AS base_price, 2099.00 AS sale_price, 'Y' AS is_serialized FROM dual) src
    ON (s.sku_code = src.sku_code)
    WHEN NOT MATCHED THEN
        INSERT (sku_code, description, product_id, base_price, sale_price, is_serialized)
            VALUES (src.sku_code, src.description, src.product_id, src.base_price, src.sale_price, src.is_serialized);

MERGE INTO sku s
    USING (SELECT 'SONYA7III-KIT' AS sku_code, 'Sony Alpha A7 III Camera with 28-70mm Lens Kit' AS description, 5 AS product_id, 2299.00 AS base_price, 2399.00 AS sale_price, 'Y' AS is_serialized FROM dual) src
    ON (s.sku_code = src.sku_code)
    WHEN NOT MATCHED THEN
        INSERT (sku_code, description, product_id, base_price, sale_price, is_serialized)
            VALUES (src.sku_code, src.description, src.product_id, src.base_price, src.sale_price, src.is_serialized);

MERGE INTO sku s
    USING (SELECT 'BOSEQC45-BLK' AS sku_code, 'Bose QuietComfort 45 Wireless Headphones - Black' AS description, 6 AS product_id, 329.00 AS base_price, 349.00 AS sale_price, 'N' AS is_serialized FROM dual) src
    ON (s.sku_code = src.sku_code)
    WHEN NOT MATCHED THEN
        INSERT (sku_code, description, product_id, base_price, sale_price, is_serialized)
            VALUES (src.sku_code, src.description, src.product_id, src.base_price, src.sale_price, src.is_serialized);

MERGE INTO sku s
    USING (SELECT 'DELLXPS13-2025' AS sku_code, 'Dell XPS 13 Laptop, 11th Gen Intel, 16GB RAM' AS description, 7 AS product_id, 1199.00 AS base_price, 1299.00 AS sale_price, 'Y' AS is_serialized FROM dual) src
    ON (s.sku_code = src.sku_code)
    WHEN NOT MATCHED THEN
        INSERT (sku_code, description, product_id, base_price, sale_price, is_serialized)
            VALUES (src.sku_code, src.description, src.product_id, src.base_price, src.sale_price, src.is_serialized);

MERGE INTO sku s
    USING (SELECT 'LOGIMX3-BLK' AS sku_code, 'Logitech MX Master 3 Wireless Mouse, Black' AS description, 8 AS product_id, 99.99 AS base_price, 109.99 AS sale_price, 'N' AS is_serialized FROM dual) src
    ON (s.sku_code = src.sku_code)
    WHEN NOT MATCHED THEN
        INSERT (sku_code, description, product_id, base_price, sale_price, is_serialized)
            VALUES (src.sku_code, src.description, src.product_id, src.base_price, src.sale_price, src.is_serialized);

MERGE INTO sku s
    USING (SELECT 'PS5-DISC' AS sku_code, 'PlayStation 5 Console with Disc Drive' AS description, 9 AS product_id, 499.00 AS base_price, 549.00 AS sale_price, 'Y' AS is_serialized FROM dual) src
    ON (s.sku_code = src.sku_code)
    WHEN NOT MATCHED THEN
        INSERT (sku_code, description, product_id, base_price, sale_price, is_serialized)
            VALUES (src.sku_code, src.description, src.product_id, src.base_price, src.sale_price, src.is_serialized);

MERGE INTO sku s
    USING (SELECT 'PS5-DIGITAL' AS sku_code, 'PlayStation 5 Digital Edition Console' AS description, 9 AS product_id, 399.00 AS base_price, 449.00 AS sale_price, 'Y' AS is_serialized FROM dual) src
    ON (s.sku_code = src.sku_code)
    WHEN NOT MATCHED THEN
        INSERT (sku_code, description, product_id, base_price, sale_price, is_serialized)
            VALUES (src.sku_code, src.description, src.product_id, src.base_price, src.sale_price, src.is_serialized);

MERGE INTO sku s
    USING (SELECT 'NGNIGHTHAWK' AS sku_code, 'Netgear Nighthawk High-Speed WiFi Router' AS description, 10 AS product_id, 199.00 AS base_price, 219.00 AS sale_price, 'N' AS is_serialized FROM dual) src
    ON (s.sku_code = src.sku_code)
    WHEN NOT MATCHED THEN
        INSERT (sku_code, description, product_id, base_price, sale_price, is_serialized)
            VALUES (src.sku_code, src.description, src.product_id, src.base_price, src.sale_price, src.is_serialized);
