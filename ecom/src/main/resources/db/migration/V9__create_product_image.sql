-- Migration: CreateProductImage
-- Write your SQL here
CREATE TABLE images (
                        Image_ID NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                        Product_ID NUMBER NOT NULL,
                        Image BLOB,
                        Alt_Text VARCHAR2(100),
                        Display_Order NUMBER,
                        CONSTRAINT fk_images_product FOREIGN KEY (Product_ID) REFERENCES product(Product_ID)
);

CREATE TABLE Product_Category (
                                  PC_id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
                                  Product_ID NUMBER,
                                  Category_ID NUMBER,
                                  CONSTRAINT fk_product FOREIGN KEY (Product_ID) REFERENCES product(Product_ID),
                                  CONSTRAINT fk_category FOREIGN KEY (Category_ID) REFERENCES category(Category_ID)
);

-- Merge (upsert) product-category relations to avoid duplicates

MERGE INTO Product_Category pc
    USING (SELECT 1 AS Product_ID, 1 AS Category_ID FROM dual) src
    ON (pc.Product_ID = src.Product_ID AND pc.Category_ID = src.Category_ID)
    WHEN NOT MATCHED THEN
        INSERT (Product_ID, Category_ID) VALUES (src.Product_ID, src.Category_ID);

MERGE INTO Product_Category pc
    USING (SELECT 2 AS Product_ID, 2 AS Category_ID FROM dual) src
    ON (pc.Product_ID = src.Product_ID AND pc.Category_ID = src.Category_ID)
    WHEN NOT MATCHED THEN
        INSERT (Product_ID, Category_ID) VALUES (src.Product_ID, src.Category_ID);

MERGE INTO Product_Category pc
    USING (SELECT 3 AS Product_ID, 1 AS Category_ID FROM dual) src
    ON (pc.Product_ID = src.Product_ID AND pc.Category_ID = src.Category_ID)
    WHEN NOT MATCHED THEN
        INSERT (Product_ID, Category_ID) VALUES (src.Product_ID, src.Category_ID);

MERGE INTO Product_Category pc
    USING (SELECT 4 AS Product_ID, 6 AS Category_ID FROM dual) src
    ON (pc.Product_ID = src.Product_ID AND pc.Category_ID = src.Category_ID)
    WHEN NOT MATCHED THEN
        INSERT (Product_ID, Category_ID) VALUES (src.Product_ID, src.Category_ID);

MERGE INTO Product_Category pc
    USING (SELECT 5 AS Product_ID, 3 AS Category_ID FROM dual) src
    ON (pc.Product_ID = src.Product_ID AND pc.Category_ID = src.Category_ID)
    WHEN NOT MATCHED THEN
        INSERT (Product_ID, Category_ID) VALUES (src.Product_ID, src.Category_ID);

MERGE INTO Product_Category pc
    USING (SELECT 6 AS Product_ID, 4 AS Category_ID FROM dual) src
    ON (pc.Product_ID = src.Product_ID AND pc.Category_ID = src.Category_ID)
    WHEN NOT MATCHED THEN
        INSERT (Product_ID, Category_ID) VALUES (src.Product_ID, src.Category_ID);

MERGE INTO Product_Category pc
    USING (SELECT 7 AS Product_ID, 2 AS Category_ID FROM dual) src
    ON (pc.Product_ID = src.Product_ID AND pc.Category_ID = src.Category_ID)
    WHEN NOT MATCHED THEN
        INSERT (Product_ID, Category_ID) VALUES (src.Product_ID, src.Category_ID);

MERGE INTO Product_Category pc
    USING (SELECT 8 AS Product_ID, 4 AS Category_ID FROM dual) src
    ON (pc.Product_ID = src.Product_ID AND pc.Category_ID = src.Category_ID)
    WHEN NOT MATCHED THEN
        INSERT (Product_ID, Category_ID) VALUES (src.Product_ID, src.Category_ID);

MERGE INTO Product_Category pc
    USING (SELECT 9 AS Product_ID, 5 AS Category_ID FROM dual) src
    ON (pc.Product_ID = src.Product_ID AND pc.Category_ID = src.Category_ID)
    WHEN NOT MATCHED THEN
        INSERT (Product_ID, Category_ID) VALUES (src.Product_ID, src.Category_ID);

MERGE INTO Product_Category pc
    USING (SELECT 10 AS Product_ID, 6 AS Category_ID FROM dual) src
    ON (pc.Product_ID = src.Product_ID AND pc.Category_ID = src.Category_ID)
    WHEN NOT MATCHED THEN
        INSERT (Product_ID, Category_ID) VALUES (src.Product_ID, src.Category_ID);